(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~realizations-page~service-page"],{

/***/ "./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js ***!
  \*****************************************************************/
/*! exports provided: disableBodyScroll, clearAllBodyScrollLocks, enableBodyScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableBodyScroll\", function() { return disableBodyScroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearAllBodyScrollLocks\", function() { return clearAllBodyScrollLocks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableBodyScroll\", function() { return enableBodyScroll; });\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nvar disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\n\nvar clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nvar enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--6-1!./node_modules/postcss-loader/src??ref--6-2!./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css ***!
  \*******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".cool-lightbox{position:fixed;left:0;bottom:0;top:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;right:0;-webkit-transition:all .3s ease;transition:all .3s ease}.cool-lightbox .cool-lightbox-zoom{position:absolute;bottom:15px;left:50%;display:-webkit-box;display:-ms-flexbox;display:flex;z-index:99999;background-color:rgba(15,15,15,.8);border-radius:8px;padding:0 12px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.cool-lightbox .cool-lightbox-zoom input[type=range]{-webkit-appearance:none;margin:10px 0;width:105px;background:0 0}.cool-lightbox .cool-lightbox-zoom input[type=range]:focus{outline:0}.cool-lightbox .cool-lightbox-zoom input[type=range]::-webkit-slider-runnable-track{width:100%;height:4px;cursor:pointer;animate:.2s;-webkit-box-shadow:0 0 0 #000;box-shadow:0 0 0 #000;background:#e6e6e6;border-radius:11px;border:0 solid #000}.cool-lightbox .cool-lightbox-zoom input[type=range]::-webkit-slider-thumb{-webkit-box-shadow:1px 1px 1px #000;box-shadow:1px 1px 1px #000;border:1px solid #000;height:12px;width:12px;border-radius:13px;background:#fff;cursor:pointer;-webkit-appearance:none;margin-top:-4.5px}.cool-lightbox .cool-lightbox-zoom input[type=range]:focus::-webkit-slider-runnable-track{background:#e6e6e6}.cool-lightbox .cool-lightbox-zoom input[type=range]::-moz-range-track{width:100%;height:4px;cursor:pointer;animate:.2s;box-shadow:0 0 0 #000;background:#e6e6e6;border-radius:11px;border:0 solid #000}.cool-lightbox .cool-lightbox-zoom input[type=range]::-moz-range-thumb{box-shadow:1px 1px 1px #000;border:1px solid #000;height:12px;width:12px;border-radius:13px;background:#fff;cursor:pointer}.cool-lightbox .cool-lightbox-zoom input[type=range]::-ms-track{width:100%;height:4px;cursor:pointer;animate:.2s;background:0 0;border-color:transparent;color:transparent}.cool-lightbox .cool-lightbox-zoom input[type=range]::-ms-fill-lower{background:#e6e6e6;border:0 solid #000;border-radius:22px;box-shadow:0 0 0 #000}.cool-lightbox .cool-lightbox-zoom input[type=range]::-ms-fill-upper{background:#e6e6e6;border:0 solid #000;border-radius:22px;box-shadow:0 0 0 #000}.cool-lightbox .cool-lightbox-zoom input[type=range]::-ms-thumb{box-shadow:1px 1px 1px #000;border:1px solid #000;height:12px;width:12px;border-radius:13px;background:#fff;cursor:pointer}.cool-lightbox .cool-lightbox-zoom input[type=range]:focus::-ms-fill-lower{background:#e6e6e6}.cool-lightbox .cool-lightbox-zoom input[type=range]:focus::-ms-fill-upper{background:#e6e6e6}.cool-lightbox .cool-lightbox-zoom .cool-lightbox-zoom__icon{height:15px;width:15px;color:#fff}.cool-lightbox .cool-lightbox-zoom .cool-lightbox-zoom__icon:first-of-type{margin-right:10px}.cool-lightbox .cool-lightbox-zoom .cool-lightbox-zoom__icon:last-of-type{margin-left:10px}.cool-lightbox .cool-lightbox-thumbs{position:absolute;height:100vh;overflow-y:auto;width:102px;right:-102px;top:0;overflow-x:hidden;-webkit-transition:none;transition:none;background-color:#ddd;scrollbar-width:thin;scrollbar-color:#fa4242 rgba(175,175,175,.9)}@media (min-width:767px){.cool-lightbox .cool-lightbox-thumbs{-webkit-transition:all .3s ease;transition:all .3s ease}}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar{width:6px;height:6px}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-button{width:0;height:0}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-thumb{background:#fa4242;border:0 none #fff;border-radius:50px}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-thumb:hover{background:#fff}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-thumb:active{background:#000}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-track{background:#e1e1e1;border:0 none #fff;border-radius:8px}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-track:hover{background:#666}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-track:active{background:#333}.cool-lightbox .cool-lightbox-thumbs::-webkit-scrollbar-corner{background:0 0}@media (min-width:767px){.cool-lightbox .cool-lightbox-thumbs{width:212px;right:-212px}}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:2px;padding-right:0}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb{background-color:#000;width:100%;margin-right:2px;margin-bottom:2px;display:block;height:75px;position:relative}@media (min-width:767px){.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb{width:calc(100%/2 - 2px)}}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb:before{top:0;left:0;right:0;bottom:0;opacity:0;content:'';z-index:150;-webkit-transition:all .3s ease;transition:all .3s ease;position:absolute;visibility:hidden;border:3px solid #fa4242}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb.is-video .cool-lightbox__thumb__icon{position:absolute;z-index:100;top:50%;left:50%;width:25px;height:25px;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb.is-video .cool-lightbox__thumb__icon path{fill:#fff}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb.is-video:after{content:'';top:0;left:0;right:0;bottom:0;z-index:50;position:absolute;background:rgba(0,0,0,.6)}.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb.active:before,.cool-lightbox .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb:hover:before{opacity:1;visibility:visible}.cool-lightbox .cool-lightbox__inner{padding:60px 0;position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;-webkit-transition:none;transition:none}@media (min-width:767px){.cool-lightbox .cool-lightbox__inner{-webkit-transition:all .3s ease;transition:all .3s ease}}.cool-lightbox .cool-lightbox__progressbar{position:absolute;top:0;left:0;right:0;height:2px;z-index:500;-webkit-transform-origin:0;transform-origin:0;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transition:-webkit-transform 3s linear;transition:-webkit-transform 3s linear;transition:transform 3s linear;transition:transform 3s linear, -webkit-transform 3s linear;display:block}.cool-lightbox.cool-lightbox--is-swipping{cursor:-webkit-grabbing;cursor:grabbing}.cool-lightbox.cool-lightbox--is-swipping iframe{pointer-events:none}.cool-lightbox.cool-lightbox--is-swipping .cool-lightbox__slide{-webkit-transition:none;transition:none}.cool-lightbox.cool-lightbox--is-swipping .cool-lightbox__slide.cool-lightbox__slide--hide{display:-webkit-box;display:-ms-flexbox;display:flex;z-index:50}.cool-lightbox.cool-lightbox--zoom-disabled .cool-lightbox__slide .cool-lightbox__slide__img{-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0)}.cool-lightbox.cool-lightbox--can-zoom .cool-lightbox__slide img{cursor:-webkit-zoom-in;cursor:zoom-in}.cool-lightbox.cool-lightbox--is-zooming .cool-lightbox__slide img{cursor:move;cursor:grab;cursor:-webkit-grab}.cool-lightbox.cool-lightbox--is-zooming .cool-lightbox-caption{opacity:0}.cool-lightbox.cool-lightbox--thumbs-right.cool-lightbox--show-thumbs .cool-lightbox__inner{right:102px}@media (min-width:767px){.cool-lightbox.cool-lightbox--thumbs-right.cool-lightbox--show-thumbs .cool-lightbox__inner{right:212px}}.cool-lightbox.cool-lightbox--thumbs-right.cool-lightbox--show-thumbs .cool-lightbox-thumbs{right:0}.cool-lightbox.cool-lightbox--thumbs-bottom .cool-lightbox-thumbs{width:100%;left:0;right:0;top:auto;height:70px;bottom:-70px;overflow:auto}@media (min-width:767px){.cool-lightbox.cool-lightbox--thumbs-bottom .cool-lightbox-thumbs{bottom:-79px;height:79px}}.cool-lightbox.cool-lightbox--thumbs-bottom .cool-lightbox-thumbs .cool-lightbox-thumbs__list{width:100%;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.cool-lightbox.cool-lightbox--thumbs-bottom .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb{width:100px;-ms-flex-negative:0;flex-shrink:0;margin-bottom:0;height:65px}@media (min-width:767px){.cool-lightbox.cool-lightbox--thumbs-bottom .cool-lightbox-thumbs .cool-lightbox-thumbs__list .cool-lightbox__thumb{height:75px}}.cool-lightbox.cool-lightbox--thumbs-bottom.cool-lightbox--show-thumbs .cool-lightbox__inner{bottom:70px}@media (min-width:767px){.cool-lightbox.cool-lightbox--thumbs-bottom.cool-lightbox--show-thumbs .cool-lightbox__inner{bottom:79px}}.cool-lightbox.cool-lightbox--thumbs-bottom.cool-lightbox--show-thumbs .cool-lightbox-thumbs{bottom:0}.cool-lightbox *{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0}.cool-lightbox button{background:0 0;border:none;cursor:pointer;outline:0}.cool-lightbox svg path,.cool-lightbox svg rect{fill:currentColor}.cool-lightbox .cool-lightbox-button{padding:21px 16px 21px 4px;height:100px;opacity:1;z-index:800;color:#ccc;-webkit-transition:all .3s ease;transition:all .3s ease;position:absolute;top:calc(50% - 50px);width:54px;transition:all .3s ease;visibility:visible}@media (min-width:767px){.cool-lightbox .cool-lightbox-button{width:70px;padding:31px 26px 31px 6px}}.cool-lightbox .cool-lightbox-button.hidden{opacity:0;visibility:hidden}.cool-lightbox .cool-lightbox-button:hover{color:#fff}.cool-lightbox .cool-lightbox-button>.cool-lightbox-button__icon{padding:7px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:rgba(30,30,30,.6)}.cool-lightbox .cool-lightbox-button>.cool-lightbox-button__icon>svg{width:100%;height:100%}.cool-lightbox .cool-lightbox-button.cool-lightbox-button--prev{left:0}.cool-lightbox .cool-lightbox-button.cool-lightbox-button--next{right:0;padding:21px 4px 21px 16px}@media (min-width:767px){.cool-lightbox .cool-lightbox-button.cool-lightbox-button--next{padding:31px 6px 31px 26px}}.cool-lightbox .cool-lightbox-pdf{max-width:100%}.cool-lightbox .cool-lightbox__iframe{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;top:50%;left:50%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative;-webkit-transform:translate3d(-50%,-50%,0) scale3d(1,1,1);transform:translate3d(-50%,-50%,0) scale3d(1,1,1)}.cool-lightbox .cool-lightbox__iframe iframe{width:100%;height:100%}@media (min-width:767px){.cool-lightbox .cool-lightbox__iframe iframe{max-width:80vw;max-height:80vh}}.cool-lightbox .cool-lightbox__wrapper{width:100%;height:100%;position:relative}.cool-lightbox .cool-lightbox__wrapper.cool-lightbox__wrapper--swipe{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.cool-lightbox .cool-lightbox__wrapper.cool-lightbox__wrapper--swipe .cool-lightbox__slide{-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;height:100%;opacity:.4;-webkit-transition:opacity .3s linear;transition:opacity .3s linear}.cool-lightbox .cool-lightbox__wrapper.cool-lightbox__wrapper--swipe .cool-lightbox__slide.cool-lightbox__slide--current{opacity:1}.cool-lightbox .cool-lightbox__slide{width:100%;top:0;bottom:0;left:0;right:0;z-index:100;display:none;position:absolute;margin-right:30px;-webkit-transition:-webkit-transform .3s ease;transition:-webkit-transform .3s ease;transition:transform .3s ease;transition:transform .3s ease, -webkit-transform .3s ease}.cool-lightbox .cool-lightbox__slide:last-of-type{margin-right:0}.cool-lightbox .cool-lightbox__slide.cool-lightbox__slide--current{display:-webkit-box;display:-ms-flexbox;display:flex}.cool-lightbox .cool-lightbox__slide .cool-lightbox__slide__img{position:absolute;height:100%;width:100%;left:50%;top:50%;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform:translate3d(-50%,-50%,0) scale3d(1,1,1);transform:translate3d(-50%,-50%,0) scale3d(1,1,1);-webkit-transition:all .3s ease;transition:all .3s ease;display:-webkit-box;display:-ms-flexbox;display:flex}.cool-lightbox .cool-lightbox__slide img{max-width:100%;max-height:100%;margin:auto;z-index:9999;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-box-shadow:0 0 1.5rem rgba(0,0,0,.45);box-shadow:0 0 1.5rem rgba(0,0,0,.45)}.cool-lightbox .cool-lightbox__slide picture{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;max-height:100%;height:100%;margin:auto;z-index:9999}.cool-lightbox-toolbar{position:absolute;top:0;right:0;opacity:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-transition:all .3s ease;transition:all .3s ease;visibility:visible}.cool-lightbox-toolbar.hidden{opacity:0;visibility:hidden}.cool-lightbox-toolbar .cool-lightbox-toolbar__btn{background:rgba(30,30,30,.6);border:0;border-radius:0;-webkit-box-shadow:none;box-shadow:none;cursor:pointer;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;margin:0;padding:9px;position:relative;-webkit-transition:color .2s;transition:color .2s;vertical-align:top;visibility:inherit;width:40px;height:40px;color:#ccc}@media (min-width:767px){.cool-lightbox-toolbar .cool-lightbox-toolbar__btn{width:44px;height:44px;padding:10px}}.cool-lightbox-toolbar .cool-lightbox-toolbar__btn>svg{width:100%;height:100%}.cool-lightbox-toolbar .cool-lightbox-toolbar__btn:hover{color:#fff}.cool-lightbox-caption{bottom:0;color:#eee;font-size:14px;font-weight:400;left:0;opacity:1;line-height:1.5;padding:18px 28px 16px 24px;right:0;text-align:center;direction:ltr;position:absolute;-webkit-transition:opacity .25s ease,visibility 0s ease .25s;transition:opacity .25s ease,visibility 0s ease .25s;z-index:99997;background:-webkit-gradient(linear,left bottom, left top,color-stop(0, rgba(0,0,0,.75)),color-stop(50%, rgba(0,0,0,.3)),color-stop(65%, rgba(0,0,0,.15)),color-stop(75.5%, rgba(0,0,0,.075)),color-stop(82.85%, rgba(0,0,0,.037)),color-stop(88%, rgba(0,0,0,.019)),to(transparent));background:linear-gradient(0deg,rgba(0,0,0,.75) 0,rgba(0,0,0,.3) 50%,rgba(0,0,0,.15) 65%,rgba(0,0,0,.075) 75.5%,rgba(0,0,0,.037) 82.85%,rgba(0,0,0,.019) 88%,transparent)}@media (min-width:767px){.cool-lightbox-caption{padding:22px 30px 23px 30px}}.cool-lightbox-caption a{color:#eee;text-decoration:underline}.cool-lightbox-caption h6{font-size:14px;margin:0 0 6px 0;line-height:130%}@media (min-width:767px){.cool-lightbox-caption h6{font-size:16px;margin:0 0 6px 0}}.cool-lightbox-caption p{font-size:13px;line-height:130%;color:#ccc}@media (min-width:767px){.cool-lightbox-caption p{font-size:15px}}.cool-lightbox-caption p a{color:#ccc}.cool-lightbox-caption p a:hover{color:#eee}.cool-lightbox-modal-enter-active,.cool-lightbox-modal-leave-active{-webkit-transition:opacity .35s;transition:opacity .35s}.cool-lightbox-modal-enter,.cool-lightbox-modal-leave-to{opacity:0}.cool-lightbox-slide-change-enter-active,.cool-lightbox-slide-change-leave-active{-webkit-transition:opacity .27s;transition:opacity .27s}.cool-lightbox-slide-change-enter,.cool-lightbox-slide-change-leave-to{opacity:0}.cool-lightbox-loading-wrapper{top:50%;left:50%;position:absolute;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.cool-lightbox-loading-wrapper .cool-lightbox-loading{-webkit-animation:cool-lightbox-rotate 1s linear infinite;animation:cool-lightbox-rotate 1s linear infinite;background:0 0;border:4px solid #888;border-bottom-color:#fff;border-radius:50%;height:50px;opacity:.7;padding:0;width:50px;z-index:500}@-webkit-keyframes cool-lightbox-rotate{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes cool-lightbox-rotate{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css\n");

/***/ }),

/***/ "./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.esm.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! body-scroll-lock */ \"./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js\");\n\n\nvar attributes = ['media', 'srcset', 'sizes', 'src'];\n\nvar LazyLoadDirective = {\n  inserted: function (el) {\n\n    function loadImage() {\n      var imageElement = findChild(el, 'img');\n      var pictureElement = findChild(el, 'picture');\n      if (imageElement) {\n        setLoadListeners(imageElement);\n        swapAttributes(imageElement);\n      } else if (pictureElement) {\n        var pictureImg = findChild(pictureElement, 'img');\n        var pictureSources = Array.from(pictureElement.children).filter(\n            function (child) { return child.nodeName === \"SOURCE\"; }\n        );\n        if (pictureImg) {\n          setLoadListeners(pictureImg);\n          if (pictureSources.length) {\n            pictureSources.forEach(function (source) {\n              swapAttributes(source);\n            });\n          }\n          swapAttributes(pictureImg);\n        }\n      }\n    }\n\n    function handleIntersect(entries, observer) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          loadImage();\n          observer.unobserve(el);\n        }\n      });\n    }\n\n    function createObserver() {\n      var options = {\n        root: null,\n        threshold: \"0\"\n      };\n      var observer = new IntersectionObserver(handleIntersect, options);\n      observer.observe(el);\n    }\n    if (window[\"IntersectionObserver\"]) {\n      createObserver();\n    } else {\n      loadImage();\n    }\n  }\n};\n\nfunction swapAttributes(el) {\n  attributes.forEach(function (attribute) {\n    var dataAttribute = el.dataset[attribute];\n    if (dataAttribute) {\n      el[attribute] = dataAttribute;\n      el.removeAttribute((\"data-\" + attribute));\n    }\n  });\n}\n\nfunction setLoadListeners(el) {\n  el.addEventListener(\"load\", function () {\n    setTimeout(function () { return el.classList.add(\"loaded\"); }, 100);\n  });\n  el.addEventListener(\"error\", function () { return console.log(\"error\"); });\n}\n\nfunction findChild(parent, nodeName) {\n  return Array.from(parent.children).find(\n      function (el) { return el.nodeName === nodeName.toUpperCase(); }\n  );\n}\n\nvar AutoplayObserver = {\r\n    inserted: function (el) {\r\n      // getYoutube ID\r\n      function isYoutubeVideo(url) {\r\n\r\n        // youtube data\r\n        var youtubeRegex = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n        var ytId = (url.match(youtubeRegex)) ? RegExp.$1 : false;\r\n\r\n        if(ytId) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      function autoplayVideo() {\r\n        var tagName = el.tagName;\r\n        var autoplay = el.dataset.autoplay; \r\n        if(autoplay) {\r\n          if(tagName === 'VIDEO') {\r\n            el.muted = true;\r\n            el.autoplay = true;\r\n\r\n            return;\r\n          }\r\n\r\n          if(tagName === 'IFRAME') {\r\n            var url = new URL(el.src);\r\n            var muted = 'muted';\r\n\r\n            if(isYoutubeVideo(el.src)) {\r\n              muted = 'mute';\r\n            }\r\n\r\n            // append autoplay\r\n            url.searchParams.append(muted, 1);\r\n            url.searchParams.append('autoplay', 1);\r\n\r\n            el.src = url.href;\r\n          }\r\n        }\r\n      }\r\n  \r\n      function handleIntersect(entries, observer) {\r\n        entries.forEach(function (entry) {\r\n          if (entry.isIntersecting) {\r\n            autoplayVideo();\r\n            observer.unobserve(el);\r\n          }\r\n        });\r\n      }\r\n  \r\n      function createObserver() {\r\n        var options = {\r\n          root: null,\r\n          threshold: \"0\"\r\n        };\r\n        var observer = new IntersectionObserver(handleIntersect, options);\r\n        observer.observe(el);\r\n      }\r\n      if (window[\"IntersectionObserver\"]) {\r\n        createObserver();\r\n      } else {\r\n        loadImage();\r\n      }\r\n    }\r\n  };\n\n//\n\nvar script = {\n  directives: {\n    lazyload: LazyLoadDirective,\n    autoplayObserver: AutoplayObserver,\n  },\n\n  data: function data() {\n    return {\n      // swipe data\n      initialMouseX: 0,\n      initialMouseY: 0,\n      endMouseX: 0,\n      endMouseY: 0,\n      swipeType: null,\n      IsSwipping: false,\n      isDraggingSwipe: false,\n\n      // use for mouse wheel\n      prevTime: 0,\n\n      // swipe effect\n      xSwipeWrapper: 0,\n      ySwipeWrapper: 0,\n      swipeAnimation: null,\n      swipeInterval: null,\n      lightboxInnerWidth: null,\n\n      // styles data\n      imgIndex: this.index,\n      isVisible: false,\n      paddingBottom: false,\n      imageLoading: false,\n      showThumbs: false,\n      isFullScreenMode: false,\n\n      // aspect ratio videos\n      aspectRatioVideo: {\n        width: 'auto',\n        height: 'auto',\n      },\n\n      // props to bind styles\n      buttonsVisible: true,\n      scale: 1,\n      top: 0,\n      left: 0,\n      lastX: 0,\n      lastY: 0,\n      isDraging: false,\n      canZoom: true,\n      isZooming: false,\n      transition: 'all .3s ease',\n      zoomBar: 0,\n\n      // slideshow playing data\n      isPlayingSlideShow: false,\n      intervalProgress: null,\n      loopData: false,\n      stylesInterval: {\n        'display': 'block'\n      }\n    };\n  },\n\n  props: {\n    index: {\n      required: true\n    },\n\n    effect: {\n      type: String,\n      default: 'swipe'\n    },\n\n    items: {\n      type: Array,\n      required: true,\n    },\n\n    loop: {\n      type: Boolean,\n      default: true,\n    },\n\n    slideshow: {\n      type: Boolean,\n      default: true,\n    },\n\n    slideshowColorBar: {\n      type: String,\n      default: '#fa4242',\n    },\n\n    slideshowDuration: {\n      type: Number,\n      default: 3000,\n    },\n    \n    useZoomBar: {\n      type: Boolean,\n      default: false,\n    },\n\n    closeOnClickOutsideMobile: {\n      type: Boolean,\n      default: false,\n    },\n    \n    srcName: {\n      type: String,\n      default: 'src',\n    },\n\n    srcSetName: {\n      type: String,\n      default: 'srcset'\n    },\n    \n    srcThumb: {\n      type: String,\n      default: 'thumb',\n    },\n\n    srcMediaType: {\n      type: String,\n      default: 'mediaType',\n    },\n\n    overlayColor: {\n      type: String,\n      default: 'rgba(30, 30, 30, .9)'\n    },\n\n    zIndex: {\n      type: Number,\n      default: 9999,\n    },\n\n    gallery: {\n      type: Boolean,\n      default: true,\n    },\n\n    fullScreen: {\n      type: Boolean,\n      default: false,\n    },\n\n    thumbsPosition: {\n      type: String,\n      default: 'right',\n    },\n\n    youtubeCookies: {\n      type: Boolean,\n      default: true,\n    },\n\n    enableWheelEvent: {\n      type: Boolean,\n      default: false,\n    },\n\n    showCloseButton: {\n      type: Boolean,\n      default: true,\n    },\n    \n    disableZoom: {\n      type: Boolean,\n      default: false,\n    },\n\n    dir: {\n      type: String,\n      default: 'ltr',\n    },\n\n    enableScrollLock: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  watch: {\n    zoomBar: function zoomBar(newVal, prevVal) {\n      var item;\n      if(this.isZooming) {\n        if(this.effect == 'swipe') {\n          item = this.$refs.items[this.imgIndex].childNodes[0];\n        } else {\n          item = this.$refs.items.childNodes[0];\n        }\n\n        var newZoom = 1.6 + newVal/10;\n        item.style.transform  = 'translate3d(calc(-50% + '+this.left+'px), calc(-50% + '+this.top+'px), 0px) scale3d('+newZoom+', '+newZoom+', '+newZoom+')';\n      }\n    },\n\n    showThumbs: function showThumbs(prev, val) {\n      var widthGalleryBlock = 212;\n      var swipeAnimation = 'all .3s ease';\n      if(window.innerWidth < 767) {\n        widthGalleryBlock = 102;\n        swipeAnimation = null;\n      }\n\n      if (this.thumbsPosition === 'bottom') {\n        widthGalleryBlock = 0;\n      }\n\n      var self = this;\n      this.swipeAnimation = swipeAnimation;\n\n      if(prev) {\n\n        if(this.dir === 'rtl') {\n          this.xSwipeWrapper = this.imgIndex*(window.innerWidth - widthGalleryBlock) + 30*this.imgIndex;\n        } else {\n          this.xSwipeWrapper = -this.imgIndex*(window.innerWidth - widthGalleryBlock) - 30*this.imgIndex;\n        }\n\n      } else {\n        \n        if(this.dir === 'rtl') {\n          this.xSwipeWrapper = this.imgIndex*window.innerWidth + 30*this.imgIndex;\n        } else {\n          this.xSwipeWrapper = -this.imgIndex*window.innerWidth - 30*this.imgIndex;\n        }\n\n      }\n\n      setTimeout(function() {\n        self.swipeAnimation = null;\n      }, 300);\n    },\n\n    index: function index(prev, val) {\n      var self = this;\n      \n      // body scroll lock\n      var $body = document.querySelector('body');\n\n      if(prev !== null) {\n        \n        // swipe type\n        this.swipeType = null;\n        this.initialMouseY = 0;\n        this.ySwipeWrapper = 0;\n        \n        // set loop from data\n        this.loopData = this.loop;\n\n        // swipe effect case remove loop\n        if(this.effect === 'swipe') {\n          this.loopData = false;\n          window.addEventListener('resize', this.xPositionOnResize);\n        }\n\n        // add img index\n        this.imgIndex = prev;\n        this.isVisible = true;\n\n        // add events listener\n        window.addEventListener('keydown', this.eventListener);\n\n        // add wheel event\n        if(this.enableWheelEvent) {\n          window.addEventListener('wheel', this.wheelEvent);\n        }\n        \n        // only in mobile\n        if(window.innerWidth < 700) {\n\n          // add click event\n          setTimeout(function() {\n            window.addEventListener('click', self.showButtons);\n          }, 200);\n        }\n\n        if (this.enableScrollLock) {\n          setTimeout(function() {\n            self.setCompensateForScrollbar();\n            Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__[\"disableBodyScroll\"])(self.$refs.coolLightbox);\n          }, 50);\n        }\n\n      } else {\n\n        // hide and stop slideshow\n        this.isVisible = false;\n        this.stopSlideShow();\n\n        // set starts X to 0\n        this.startsX = 0;\n        this.initialMouseY = 0;\n        this.swipeType = null;\n\n        // clear interval\n        clearInterval(this.swipeInterval);\n        this.swipeAnimation = null;\n\n        // finish swipe\n        this.isDraggingSwipe = false;\n        this.isZooming = true;\n\n        // remove events listener\n        window.removeEventListener('keydown', this.eventListener);\n\n        if (this.enableScrollLock) {\n          self.removeCompensateForScrollbar();\n          Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__[\"enableBodyScroll\"])(self.$refs.coolLightbox);\n        }\n\n        // remove click event\n        window.removeEventListener('click', this.showButtons);\n\n        // remove resize event\n        window.removeEventListener('resize', this.xPositionOnResize);\n        \n        // remove wheel event\n        if(this.enableWheelEvent) {\n          window.removeEventListener('wheel', this.wheelEvent);\n        }\n      }\n\n    }, \n    \n    imgIndex: function imgIndex(prev, val) {\n      var this$1 = this;\n      \n      // when animation is loaded\n      this.$nextTick(function () {\n\n        if(this$1.effect === 'swipe') {\n          this$1.setLightboxInnerWidth();\n          this$1.setXPosition(prev);\n        }\n        \n        if(prev !== null & val === null) {\n          this$1.$emit(\"on-open\", prev);\n        }\n\n        if(prev !== null) {\n          if(prev !== val) {\n            if(!this$1.getYoutubeUrl(this$1.getItemSrc(prev)) && !this$1.getVimeoUrl(this$1.getItemSrc(prev))) {\n              this$1.stopVideos();\n            }\n          }\n\n          // if is an image change imageLoading to true\n          if(!this$1.getVideoUrl(this$1.getItemSrc(prev))) {\n            if(!this$1.is_cached(this$1.getItemSrc(prev))) {\n              this$1.imageLoading = true;\n            }\n          }\n\n          // add caption padding to Lightbox wrapper\n          this$1.addCaptionPadding();\n          \n          // setAspectRatioVideo when is swipe\n          if(this$1.effect === 'swipe') {\n            this$1.setAspectRatioVideo();\n          } else {\n\n            if(this$1.getVideoUrl(this$1.getItemSrc(prev))) {\n              this$1.setAspectRatioVideo();\n            }\n          }\n        }\n\n        // reset zoom\n        this$1.resetZoom();\n\n        // reset swipe type\n        this$1.swipeType = null;\n        this$1.ySwipeWrapper = 0;\n\n      });\n    }, \n  },\n\n  beforeDestroy: function beforeDestroy () {\n    if (this.enableScrollLock) {\n      this.removeCompensateForScrollbar();\n      if(this.$refs.coolLightbox) {\n        Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__[\"enableBodyScroll\"])(this.$refs.coolLightbox);\n      }\n    }\n  },\n\n  methods: {\n    getExtFromItem: function getExtFromItem(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      if(this.checkIfIsObject(imgIndex)) {\n        var item = this.items[imgIndex];\n\n        //item extension is specified, so return it\n        if (item['ext']) {\n          return item['ext']\n        }\n\n        return 'mp4';\n      }\n    },\n\n    stopVideos: function stopVideos() {\n      var videos = document.getElementsByClassName(\"cool-lightbox-video\");\n      var isVideoPlaying = function (video) { return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2); };\n      if(videos.length > 0) {\n        Array.prototype.forEach.call(videos, function (video) {\n          var type = video.tagName;\n          \n          if(type === 'IFRAME') {\n            var iframeSrc = video.src;\n            return video.src = iframeSrc;\n          }\n\n          if(isVideoPlaying(video)) {\n            return video.pause();\n          }\n\n        });\n      }\n    }, \n\n    removeCompensateForScrollbar: function removeCompensateForScrollbar() {\n      document.body.classList.remove(\"compensate-for-scrollbar\");\n      var noscrollStyle = document.getElementById(\"coollightbox-style-noscroll\");\n      if(noscrollStyle !== null) {\n        document.getElementById(\"coollightbox-style-noscroll\").remove();\n      }\n    },\n\n    setCompensateForScrollbar: function setCompensateForScrollbar() {\n      var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n      if (\n        !isMobile &&\n        document.body.scrollHeight > window.innerHeight\n      ) {\n        document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend',\n          '<style id=\"coollightbox-style-noscroll\" type=\"text/css\">.compensate-for-scrollbar{margin-right:' +\n            (window.innerWidth - document.documentElement.clientWidth) +\n          \"px;}</style>\"\n        );\n\n        document.body.classList.add(\"compensate-for-scrollbar\");\n      }\n    }, \n\n    setAutoplay: function setAutoplay(itemIndex) {\n      if(this.checkIfIsObject(itemIndex) && this.items[itemIndex].hasOwnProperty('autoplay') && this.items[itemIndex].autoplay) {\n        return true;\n      }\n\n      return false;\n    },\n\n    toggleFullScreenMode: function toggleFullScreenMode() {\n      if(this.isFullScreenMode) {\n        this.closeFullscreen();\n      } else {\n        this.fullScreenMode();\n      }\n\n      this.isFullScreenMode = !this.isFullScreenMode;\n    },\n\n    closeFullscreen: function closeFullscreen() {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) { /* Firefox */\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) { /* IE/Edge */\n        document.msExitFullscreen();\n      }\n    },\n\n    fullScreenMode: function fullScreenMode() {\n      /* Get the documentElement (<html>) to display the page in fullscreen */\n      var elem = document.documentElement;\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.mozRequestFullScreen) { /* Firefox */\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n        elem.webkitRequestFullscreen();\n      } else if (elem.msRequestFullscreen) { /* IE/Edge */\n        elem.msRequestFullscreen();\n      }\n    },\n\n    // check if event is arrow button or toolbar button\n    checkIfIsButton: function checkIfIsButton(event) {\n      var elements = '.cool-lightbox__iframe *, .cool-lightbox-button, .cool-lightbox-button *, .cool-lightbox-toolbar__btn, .cool-lightbox-toolbar__btn *, .cool-lightbox-caption h6, .cool-lightbox-caption p, .cool-lightbox-caption a';\n      if (event.target.matches(elements)) {\n        return true\n      }\n\n      return false\n    },\n\n    // start swipe event\n    startSwipe: function startSwipe(event) {\n      if(this.isZooming) {\n        return false;\n      }\n\n      // check if is some button\n      if(this.checkIfIsButton(event)) {\n        return false;\n      }\n\n      // clear interval\n      clearInterval(this.swipeInterval);\n      this.swipeAnimation = null;\n\n      // starts swipe\n      this.isDraggingSwipe = true;\n      this.initialMouseX = this.getMouseXPosFromEvent(event);\n      this.initialMouseY = this.getMouseYPosFromEvent(event);\n    },\n\n    // continue swipe event\n    continueSwipe: function continueSwipe(event) {\n      if(this.isDraggingSwipe) {\n        this.IsSwipping = true;\n        var currentPosX = this.getMouseXPosFromEvent(event);\n        var currentPosY = this.getMouseYPosFromEvent(event);\n        var windowWidth = this.lightboxInnerWidth;\n\n        // diffs\n        var diffX = Math.abs(currentPosX - this.initialMouseX);\n        var diffY = Math.abs(currentPosY - this.initialMouseY);\n\n        // swipe type\n        if(this.swipeType == null) {\n          if(diffY > 5 || diffX > 5) {\n            if(diffY > diffX) {\n              this.swipeType = 'v';\n            } else {\n              this.swipeType = 'h';\n            }\n          }\n        }\n\n        // swipe\n        if(this.swipeType == 'h') {\n          // swipe wrapper\n          if(this.dir === 'rtl') {\n            this.xSwipeWrapper = (windowWidth*this.imgIndex) + currentPosX - this.initialMouseX + 30*this.imgIndex;\n          } else {\n            this.xSwipeWrapper = -(windowWidth*this.imgIndex) + currentPosX - this.initialMouseX - 30*this.imgIndex;\n          }\n\n        } else {\n          this.ySwipeWrapper = currentPosY - this.initialMouseY;\n        }\n\n        // mobile caseS\n        if(event.type === 'touchmove') {\n          this.endMouseX = this.getMouseXPosFromEvent(event);\n          this.endMouseY = this.getMouseYPosFromEvent(event);\n        }\n      }\n    },\n\n    // end swipe event\n    endSwipe: function endSwipe(event) {\n      if(this.checkIfIsButton(event) && this.initialMouseX === 0) {\n        return false;\n      }\n\n      // event check is dragging and swipe\n      var self = this;\n      var swipeType = this.swipeType;\n      this.isDraggingSwipe = false;\n      \n      // horizontal swipe type\n      if(this.initialMouseX === 0 && swipeType == 'h') {\n        return false\n      }\n\n      // touch end fixes\n      if(event.type !== 'touchend') {\n        this.endMouseX = this.getMouseXPosFromEvent(event);\n        this.endMouseY = this.getMouseYPosFromEvent(event);\n      } else {\n        if(this.endMouseX === 0) {\n          return;\n        }\n      }\n\n      // check if is dragged \n      if(\n        ((this.endMouseX - this.initialMouseX === 0) && swipeType == 'h') || \n        this.isZooming ||\n        ((this.endMouseY - this.initialMouseY === 0) && swipeType == 'v')\n      ) {\n        return;\n      } \n      \n      // set swipe animation\n      this.setSwipeAnimation();\n\n      // reset swipe data\n      setTimeout(function() {\n        self.IsSwipping = false;\n        self.initialMouseX = 0;\n        self.endMouseX = 0;\n      }, 10);\n\n      // type of swipe\n      if(this.swipeType === 'h') {\n\n        // if the swipe is to the right\n        if((this.endMouseX - this.initialMouseX) < -40) {\n          if(this.dir === 'rtl') {\n            return this.swipeToLeft()\n          }\n          return this.swipeToRight()\n        } \n\n        // if the swipe is to the left\n        if((this.endMouseX - this.initialMouseX) > 40) {\n          if(this.dir === 'rtl') {\n            return this.swipeToRight()\n          }\n          return this.swipeToLeft();\n        }\n      }\n\n\n      if(this.swipeType === 'v') {\n        var diffY = Math.abs(this.endMouseY - this.initialMouseY);\n\n        // diff Y\n        if(diffY >= 90) {\n          this.close();\n        } else {\n          this.ySwipeWrapper = 0;\n        }\n      } \n      \n      this.swipeType = null;\n      var windowWidth = this.lightboxInnerWidth;\n\n      if(this.dir === 'rtl') {\n        this.xSwipeWrapper = this.imgIndex*windowWidth + 30*this.imgIndex;\n        return;\n      }\n\n      this.xSwipeWrapper = -this.imgIndex*windowWidth - 30*this.imgIndex;\n    },\n    \n    // swipe to left effect\n    swipeToLeft: function swipeToLeft() {\n      if(!this.hasPrevious && this.effect === 'swipe') {\n\n        if(this.dir === 'rtl') {\n          return this.xSwipeWrapper = this.imgIndex*this.lightboxInnerWidth + 30*this.imgIndex\n        }\n\n        return this.xSwipeWrapper = -this.imgIndex*this.lightboxInnerWidth - 30*this.imgIndex\n      }\n\n      this.changeIndexToPrev();\n    },\n    \n    // swipe to right effect\n    swipeToRight: function swipeToRight() {\n      if(!this.hasNext && this.effect === 'swipe') {\n\n        if(this.dir === 'rtl') {\n          return this.xSwipeWrapper = this.imgIndex*this.lightboxInnerWidth + 30*this.imgIndex\n        }\n\n        return this.xSwipeWrapper = -this.imgIndex*this.lightboxInnerWidth - 30*this.imgIndex\n      }\n\n      this.changeIndexToNext();\n    },\n\n    // function that return x position from event\n    getMouseXPosFromEvent: function getMouseXPosFromEvent(event) {\n      if(event.type.indexOf('mouse') !== -1){\n          return event.clientX;\n      }\n      return event.touches[0].clientX;\n    },\n    \n    // function that return Y position from event\n    getMouseYPosFromEvent: function getMouseYPosFromEvent(event) {\n      if(event.type.indexOf('mouse') !== -1){\n          return event.clientY;\n      }\n      return event.touches[0].clientY;\n    },\n\n    // check if the image is cached\n    is_cached: function is_cached(src) {\n      var image = new Image();\n      image.src = src;\n\n      return image.complete;\n    },\n\n    // image loaded event\n    imageLoaded: function imageLoaded() {\n      this.imageLoading = false;\n    },\n\n    // get video url\n    itemThumb: function itemThumb(itemUrl, itemIndex) {\n\n      var thumb = this.getItemThumb(itemIndex);\n      if(thumb) {\n        return thumb\n      }\n\n      var youtubeID = this.getYoutubeID(itemUrl);\n      if(youtubeID) {\n        return 'https://img.youtube.com/vi/'+youtubeID+'/mqdefault.jpg'\n      }\n\n      var vimeoID = this.getVimeoID(itemUrl);\n      if(vimeoID) {\n        return false\n      }\n\n      return itemUrl\n    },\n\n    isItemPicture: function isItemPicture(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[imgIndex];\n      if(this.checkIfIsObject(imgIndex)) {\n        return item.picture\n      }\n\n      return false\n    },\n\n    getPictureSources: function getPictureSources(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var picture = this.items[imgIndex].picture;\n\n      return picture.sources ? picture.sources : []\n    },\n    \n    // get item src\n    getItemSrc: function getItemSrc(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[imgIndex];\n      if(this.checkIfIsObject(imgIndex)) {\n        return item[this.srcName]\n      }\n\n      return item\n    },\n\n    getItemSrcSet: function getItemSrcSet(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[imgIndex];\n      if(this.checkIfIsObject(imgIndex)) {\n        return item[this.srcSetName]\n      }\n\n      return null\n    },\n\n    getItemSizes: function getItemSizes(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[imgIndex];\n      if(this.checkIfIsObject(imgIndex)) {\n        return item.sizes\n      }\n\n      return null\n    },\n    \n    getItemAlt: function getItemAlt(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[imgIndex];\n      if(this.checkIfIsObject(imgIndex)) {\n        return item.alt;\n      }\n\n      return null\n    },\n\n    getItemThumb: function getItemThumb(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[imgIndex];\n      if(this.checkIfIsObject(imgIndex)) {\n        return item[this.srcThumb]\n      } \n\n      if(this.getVideoUrl(item)) {\n        return false\n      }\n\n      return item\n    },\n\n    // get item media type\n    getMediaType: function getMediaType(imgIndex) {\n      if(imgIndex === null) {\n        return false\n      }\n\n      if(this.checkIfIsObject(imgIndex)) {\n        \n        var item$1 = this.items[imgIndex];\n\n        //item type is specified, so return it\n        if (item$1[this.srcMediaType]) {\n          return item$1[this.srcMediaType]\n        }\n      }\n    \n      if (this.getVideoUrl(this.getItemSrc(imgIndex))) {\n        return 'video'\n      } else if (this.getPDFurl(this.getItemSrc(imgIndex))) { \n        return 'iframe'\n      } else {\n        return 'image'\n      }\n    },\n\n    // toggle play slideshow event\n    togglePlaySlideshow: function togglePlaySlideshow() {\n      if(!this.slideshow) {\n        return false\n      }\n\n      if(!this.hasNext && !this.loopData) {\n        return false\n      }\n      this.isPlayingSlideShow = !this.isPlayingSlideShow;\n\n      // if is playing move if not stop it\n      if(this.isPlayingSlideShow) {\n        this.move();\n      } else {\n        this.stopSlideShow();\n      }\n    },\n\n    // stop slideshow\n    stopSlideShow: function stopSlideShow() {\n      this.isPlayingSlideShow = false;\n      clearInterval(this.intervalProgress);\n      this.stylesInterval = {\n        'transform': 'scaleX(0)',\n        'transition': 'none',\n      };\n    },\n\n    // move event in zoom\n    move: function move() {\n      var self = this;\n      this.progressWidth = 100;\n      this.intervalProgress = setInterval(frame, this.slideshowDuration + 90);\n      \n      self.stylesInterval = {\n        'transform': 'scaleX(1)',\n        'background': this.slideshowColorBar,\n        'transition-duration': this.slideshowDuration+'ms',\n      };\n      function frame() {\n        self.stylesInterval = {\n          'transform': 'scaleX(0)',\n          'transition': 'none',\n        };\n        \n        if(self.dir === 'rtl') {\n          self.onPrevClick(true);\n        } else {\n          self.onNextClick(true);\n        }\n\n        if(!self.hasNext && !self.loopData) {\n          self.stopSlideShow();\n        } else {\n          setTimeout(function() {\n            self.stylesInterval = {\n              'transform': 'scaleX(1)',\n              'background': self.slideshowColorBar,\n              'transition-duration': self.slideshowDuration+'ms',\n            };\n          }, 50);\n        }\n      }\n    }, \n\n    // show buttons event\n    showButtons: function showButtons(event) {\n      if (!this.checkIfIsButton(event)) {\n        var self = this;\n        setTimeout(function() {\n          self.buttonsVisible = !self.buttonsVisible;\n        }, 100);\n      }\n    },\n\n    // check if is allowed to drag\n    checkMouseEventPropButton: function checkMouseEventPropButton(button) {\n      if (!this.isZooming) { return false }\n      // mouse left btn click\n      return button === 0\n    },\n\n    // handle mouse down event\n    handleMouseDown: function handleMouseDown(e) {\n      if (!this.checkMouseEventPropButton(e.button)) { return }\n      this.lastX = e.clientX;\n      this.lastY = e.clientY;\n      this.isDraging = true;\n      e.stopPropagation();\n    },\n\n    // handle mouse up event\n    handleMouseUp: function handleMouseUp(e) {\n      if (!this.checkMouseEventPropButton(e.button)) { return }\n      this.isDraging = false;\n      this.lastX = this.lastY = 0;\n\n      // Fix drag zoom out\n      var thisContext = this;\n      setTimeout(function() {\n        thisContext.canZoom = true;\n      }, 100);\n    },\n\n    // handle mouse move event\n    handleMouseMove: function handleMouseMove(e) {\n      if (!this.checkMouseEventPropButton(e.button)) { return }\n      if (this.isDraging) {\n        this.top = this.top - this.lastY + e.clientY;\n        this.left = this.left - this.lastX + e.clientX;\n        this.lastX = e.clientX;\n        this.lastY = e.clientY;\n        this.canZoom = false;\n        \n        var item = e.target.parentNode.nodeName === 'PICTURE'\n            ? e.target.parentNode.parentNode\n            : e.target.parentNode;\n        var newZoom = 1.6 + this.zoomBar/10;\n        item.style.transform  = 'translate3d(calc(-50% + '+this.left+'px), calc(-50% + '+this.top+'px), 0px) scale3d('+newZoom+', '+newZoom+', '+newZoom+')';\n      }\n      e.stopPropagation();\n    },\n\n    // zoom image event\n    zoomImage: function zoomImage(indexImage) {\n      if(this.disableZoom) {\n        return false\n      }\n\n      if(window.innerWidth < 700) {\n        return false\n      }\n\n      if(!this.canZoom) {\n        return false\n      }\n\n      if(this.IsSwipping) {\n        return false\n      }\n\n      // item zoom\n      var item;\n      if(this.effect == 'swipe') {\n        item = this.$refs.items[this.imgIndex].childNodes[0];\n      } else {\n        item = this.$refs.items.childNodes[0];\n      }\n      \n      // zoom variables\n      var isZooming = this.isZooming;\n      var thisContext = this;\n\n      // Is zooming check\n      if(isZooming) {\n        if(!this.isDraging) { \n          this.isZooming = false;\n          this.zoomBar = 0;\n        }\n      } else {\n        this.isZooming = true;\n      }\n\n      // check if is zooming\n      if(this.isZooming) {\n        this.stopSlideShow();\n\n        // add scale\n        item.style.transform  = 'translate3d(calc(-50%), calc(-50%), 0px) scale3d(1.6, 1.6, 1.6)';\n\n        // hide buttons\n        this.buttonsVisible = false;\n\n        // fix drag transition problems\n        setTimeout(function() {\n          thisContext.transition = 'all .0s ease';\n        }, 100);\n\n      } else {\n\n        // show buttons \n        this.buttonsVisible = true;\n        this.resetZoom();\n      }\n    },\n\n    // Reset zoom data\n    resetZoom: function resetZoom() {\n      this.scale = 1;\n      this.left = 0;\n      this.top = 0;\n      this.zoomBar = 0;\n      this.isZooming = false;\n      this.swipeType = null;\n      this.transition = 'all .3s ease';\n\n      // only if index is not null\n      if(this.imgIndex != null) {\n        \n        var item;\n        if(this.effect == 'swipe') {\n          item = this.$refs.items[this.imgIndex].childNodes[0];\n        } else {\n          item = this.$refs.items.childNodes[0];\n        }\n\n        // reset styles\n        if(this.disableZoom) {\n          item.style.transform  = 'translate3d(calc(-50% + '+this.left+'px), calc(-50% + '+this.top+'px), 0px)';\n        } else {\n          item.style.transform  = 'translate3d(calc(-50% + '+this.left+'px), calc(-50% + '+this.top+'px), 0px) scale3d(1, 1, 1)';\n        }\n\n        this.initialMouseX = 0;\n        if(window.innerWidth >= 700) {\n          this.buttonsVisible = true;\n        }\n      }\n    },\n\n    // Aspect Ratio responsive video\n    setAspectRatioVideo: function setAspectRatioVideo() {\n      var thisContext = this;\n      var el = document.getElementsByClassName('cool-lightbox__inner');\n      el = el[0];\n\n      var computedStyle = getComputedStyle(el);\n      if(window.innerWidth < 1440) {\n\n        var width = el.clientWidth;\n        var height = Math.round((width/16)*9);\n\n        this.aspectRatioVideo.height = height+'px';\n        this.aspectRatioVideo.width = width+'px';\n\n      } else {\n        \n        setTimeout(function() {\n          var height = el.clientHeight;\n          height -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n\n          var width = (height/9)*16;\n\n          thisContext.aspectRatioVideo.height = height+'px';\n          thisContext.aspectRatioVideo.width = width+'px';\n        }, 150);\n\n      }\n    },\n\n    // close event\n    close: function close() {\n      this.stopSlideShow();\n      this.swipeType = null;\n      this.$emit(\"close\", this.imgIndex);\n      this.showThumbs = false;\n      this.imgIndex = null;\n    },\n\n    wheelEvent: function wheelEvent(event) {\n      var delay = 350;\n      var currentTime = new Date().getTime();\n      var direction = event.deltaY > 0 ? 'top' : 'down';\n\n      if (currentTime - this.prevTime < delay) { return; }\n\n      this.prevTime = currentTime;\n\n      switch (direction) {\n        case 'top':\n          return this.changeIndexToPrev();\n        case 'down':\n          return this.changeIndexToNext();\n      }\n    },\n\n    // close event click outside\n    closeModal: function closeModal(event) {\n      if(!this.closeOnClickOutsideMobile) {\n        if(window.innerWidth < 700) {\n          return false;\n        }\n      }\n\n      if(this.IsSwipping) {\n        return false;\n      }\n\n      var elements = '.cool-lightbox__iframe, .cool-lightbox__iframe *, .cool-lightbox-zoom, .cool-lightbox-zoom *, .cool-lightbox-thumbs, svg, path, rect, .cool-lightbox-thumbs *, .cool-lightbox-button, .cool-lightbox-toolbar__btn, .cool-lightbox-toolbar__btn *, .cool-lightbox-button *, .cool-lightbox__slide__img *, .cool-lightbox-video, .cool-lightbox-caption h6, .cool-lightbox-caption p, .cool-lightbox-caption a';\n      if (!event.target.matches(elements)) {\n        this.close();\n      }\n    },\n\n    // set swipe animation\n    setSwipeAnimation: function setSwipeAnimation() {\n      var self = this;\n      clearInterval(this.swipeInterval);\n      this.swipeAnimation = null;\n\n      // animation swipe\n      this.swipeAnimation = 'all .3s ease';\n      this.swipeInterval = setInterval(interval, 330);\n\n      function interval() {\n        self.swipeAnimation = null;\n      }\n    },\n\n    // next slide event\n    onNextClick: function onNextClick(isFromSlideshow) {\n      if ( isFromSlideshow === void 0 ) isFromSlideshow = false;\n\n      if(this.isZooming) {\n        return false;\n      }\n\n      if(!isFromSlideshow) {\n        this.stopSlideShow();\n      }\n\n      this.setSwipeAnimation();\n\n      if(this.dir === 'rtl') {\n        return this.changeIndexToPrev();\n      }\n\n      this.changeIndexToNext();\n    },\n\n    // prev slide event\n    onPrevClick: function onPrevClick(isFromSlideshow) {\n      if ( isFromSlideshow === void 0 ) isFromSlideshow = false;\n\n      if(this.isZooming) {\n        return false;\n      }\n      \n      if(!isFromSlideshow) {\n        this.stopSlideShow();\n      }\n      \n      this.setSwipeAnimation();\n\n      if(this.dir === 'rtl') {\n        return this.changeIndexToNext();\n      }\n\n      this.changeIndexToPrev();\n    },\n\n    // change to next index\n    changeIndexToNext: function changeIndexToNext() {\n      if(this.hasNext) {\n        this.onIndexChange(this.imgIndex + 1);\n      } else {\n        // only if has loop prop\n        if(this.loopData) {\n          this.onIndexChange(0);\n        }\n      }\n    },\n\n    // change to prev index\n    changeIndexToPrev: function changeIndexToPrev() {\n      if(this.hasPrevious) {\n        this.onIndexChange(this.imgIndex - 1);\n      } else {\n        // only if has loop prop\n        if(this.loopData) {\n          this.onIndexChange(this.items.length - 1);\n        }\n      }\n    },\n\n    // set lightbox inner width\n    setLightboxInnerWidth: function setLightboxInnerWidth() {\n      var el = document.getElementsByClassName('cool-lightbox__inner');\n      var width = el[0].clientWidth;\n      this.lightboxInnerWidth = width;\n    },\n\n    // x position on resize event\n    xPositionOnResize: function xPositionOnResize() {\n      this.setLightboxInnerWidth();\n      var index = this.imgIndex;\n\n      if(this.dir === 'rtl') {\n        this.xSwipeWrapper = index*this.lightboxInnerWidth+30*index;\n        return;\n      }\n\n      // set x position\n      this.xSwipeWrapper = -index*this.lightboxInnerWidth-30*index;\n    },\n\n    // set x position by img index\n    setXPosition: function setXPosition(index) {\n      if(this.dir === 'rtl') {\n        this.xSwipeWrapper = index*this.lightboxInnerWidth+30*index;\n        return\n      }\n\n      // set x position\n      this.xSwipeWrapper = -index*this.lightboxInnerWidth-30*index;\n      return; \n    },\n\n    // index change\n    onIndexChange: function onIndexChange(index) {\n      var self = this;\n      this.imgIndex = index;\n      this.$emit('on-change', index);\n\n      setTimeout(function() {\n        self.$emit('on-change-end', index);\n      }, 400);\n    },\n\n    // caption size \n    addCaptionPadding: function addCaptionPadding() {\n      if(this.checkIfIsObject(this.imgIndex) && (this.items[this.imgIndex].title || this.items[this.imgIndex].descripcion)) {\n        var el = document.getElementsByClassName('cool-lightbox-caption');\n        if(el.length > 0) {\n          this.paddingBottom = el[0].offsetHeight;\n        } \n      } else {\n        this.paddingBottom = 60;\n      }\n    },\n\n    getPDFurl: function getPDFurl(url) {\n      if(this.imgIndex === null) {\n        return false\n      }\n\n      var str = new String(url);\n      if(str.endsWith('.pdf')){\n        return url\n      }\n\n      return false\n    },\n\n    // check if is video\n    getVideoUrl: function getVideoUrl(itemSrc) {\n\n      var youtubeUrl = this.getYoutubeUrl(itemSrc);\n      var vimeoUrl = this.getVimeoUrl(itemSrc);\n      var mp4Url = this.checkIsMp4(itemSrc);\n\n      if(youtubeUrl) {\n        return youtubeUrl\n      }\n\n      if(vimeoUrl) {\n        return vimeoUrl\n      }\n\n      if(mp4Url) {\n        return mp4Url\n      }\n\n      return false\n    },\n    \n    // getYoutube ID\n    getYoutubeID: function getYoutubeID(url) {\n\n      // youtube data\n      var youtubeRegex = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n      var ytId = (url.match(youtubeRegex)) ? RegExp.$1 : false;\n\n      if(ytId) {\n        return ytId\n      }\n\n      return false\n    },\n\n    // get youtube url\n    getYoutubeUrl: function getYoutubeUrl(url) {\n\n      // youtube data\n      var ytId = this.getYoutubeID(url);\n\n      // if is youtube video\n      if(ytId) {\n\n        // check if allows youtube cookies\n        if(this.youtubeCookies) {\n          return 'https://www.youtube.com/embed/'+ytId\n        }\n\n        return 'https://www.youtube-nocookie.com/embed/'+ytId\n      }\n\n      return false\n    },\n\n    // vimeo ID\n    getVimeoID: function getVimeoID(url) {\n      \n      // if is vimeo video\n      var result = url.match(/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i);\n      if(result !== null) {\n        return result[1]\n      }\n\n      return false\n    },\n\n    // get vimeo url\n    getVimeoUrl: function getVimeoUrl(url) {\n\n      // if is vimeo video\n      var result = url.match(/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i);\n      if(result !== null) {\n        return '//player.vimeo.com/video/'+result[1]+'?hd=1&show_title=1&show_byline=1&show_portrait=0&fullscreen=1'\n      }\n\n      return false\n    },\n\n    // check if video is mp4\n    checkIsMp4: function checkIsMp4(url) {\n      if(this.imgIndex === null) {\n        return false\n      }\n\n      var str = new String(url);\n      if(\n        (str.indexOf('.mp4') !== -1) || \n        (str.indexOf('.mov') !== -1) || \n        (str.indexOf('.webm') !== -1) || \n        (str.indexOf('.ogg') !== -1) || \n        (str.indexOf('.avi') !== -1)\n      ) {\n        return url\n      }\n\n      return false\n    },\n\n    // if is video get extension\n    getVideoExt: function getVideoExt(url) {\n      if(this.imgIndex === null) {\n        return false\n      }\n\n      var str = new String(url);\n      if(str.indexOf('.mp4') !== -1 || str.indexOf('.mov') !== -1){\n        return 'mp4'\n      }\n\n      if(str.indexOf('.webm') !== -1) {\n        return 'webm'\n      }\n\n      if(str.indexOf('.ogg') !== -1) {\n        return 'ogg'\n      }\n      \n      if(str.indexOf('.avi') !== -1) {\n        return 'avi'\n      }\n\n      return false\n    },\n\n    // check if item is object\n    checkIfIsObject: function checkIfIsObject(itemIndex) {\n      var item = this.items[itemIndex];\n      if(typeof item === 'object' && item !== null) {\n        return true\n      }\n      return false;\n    },\n\n    // arrows and escape events\n    eventListener: function eventListener(e) {\n      switch (e.keyCode) {\n        case 39:\n          return this.onNextClick()\n        case 37:\n          return this.onPrevClick()\n        case 38:\n        case 40:\n        case ' ':\n          return e.preventDefault()\n        case 27:\n          return this.close()\n      }\n    },\n  },\n\n  computed: {\n    \n    // Images wrapper styles to use drag and zoom\n    imgWrapperStyle: function imgWrapperStyle() {\n      return {\n        top: \"50%\",\n        left: \"50%\",\n        transition: this.transition,\n      }\n    },\n\n    // lightbox styles\n    lightboxStyles: function lightboxStyles() {\n      return { \n        'z-index': this.zIndex,\n        'background-color': this.overlayColor,\n      }\n    },\n\n    innerStyles: function innerStyles() {\n      return {\n        'padding-bottom': this.paddingBottom+'px',\n      }\n    },\n\n    // get item src\n    itemSrc: function itemSrc() {\n      if(this.imgIndex === null) {\n        return false\n      }\n\n      var item = this.items[this.imgIndex];\n      if(this.checkIfIsObject(this.imgIndex)) {\n        return item[this.srcName]\n      }\n\n      return item\n    },\n\n    // Lightbox classes\n    lightboxClasses: function lightboxClasses() {\n      var classesReturn = [\n        { 'cool-lightbox--can-zoom': this.canZoom && !this.disableZoom },\n        { 'cool-lightbox--zoom-disabled': this.disableZoom},\n        { 'cool-lightbox--is-zooming': this.isZooming },\n        { 'cool-lightbox--show-thumbs': this.showThumbs },\n        { 'cool-lightbox--is-swipping': this.isDraggingSwipe }\n      ];\n\n      var classString = 'cool-lightbox--thumbs-'+this.thumbsPosition;\n      classesReturn.push(classString);\n\n      return classesReturn\n    },\n\n    // Buttons classes\n    buttonsClasses: function buttonsClasses() {\n      return {\n        'hidden': !this.buttonsVisible,\n      }\n    },\n\n    // check if the slide has next element\n    hasNextButton: function hasNextButton() {\n      if(this.dir === 'rtl') {\n        return (this.imgIndex - 1 >= 0)\n      }\n        \n      return (this.imgIndex + 1 < this.items.length)\n    },\n\n    // check if the slide has previous element \n    hasPreviousButton: function hasPreviousButton() {\n      if(this.dir === 'rtl') {\n        return (this.imgIndex + 1 < this.items.length)\n      }\n\n      return (this.imgIndex - 1 >= 0)\n    },\n\n    // check if the slide has next element\n    hasNext: function hasNext() {\n      return (this.imgIndex + 1 < this.items.length)\n    },\n\n    // check if the slide has previous element \n    hasPrevious: function hasPrevious() {\n      return (this.imgIndex - 1 >= 0)\n    },\n  }\n};\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nvar normalizeComponent_1 = normalizeComponent;\n\n/* script */\nvar __vue_script__ = script;\n/* template */\nvar __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"cool-lightbox-modal\"}},[(_vm.isVisible)?_c('div',{ref:\"coolLightbox\",staticClass:\"cool-lightbox\",class:_vm.lightboxClasses,style:(_vm.lightboxStyles),on:{\"click\":_vm.closeModal}},[(_vm.gallery)?_c('div',{staticClass:\"cool-lightbox-thumbs\"},[_c('div',{staticClass:\"cool-lightbox-thumbs__list\"},_vm._l((_vm.items),function(item,itemIndex){return _c('button',{key:itemIndex,staticClass:\"cool-lightbox__thumb\",class:{ \n            active: itemIndex === _vm.imgIndex,\n            'is-video': _vm.getMediaType(itemIndex) === 'video' \n          },attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.imgIndex = itemIndex;}}},[(_vm.getMediaType(itemIndex) === 'video')?_c('svg',{staticClass:\"cool-lightbox__thumb__icon\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M6.5 5.4v13.2l11-6.6z\"}})]):_vm._e(),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.itemThumb(_vm.getItemSrc(itemIndex), itemIndex),\"alt\":\"\"}})])}),0)]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"cool-lightbox__inner\",style:(_vm.innerStyles),on:{\"mousedown\":_vm.startSwipe,\"mousemove\":_vm.continueSwipe,\"mouseup\":_vm.endSwipe,\"touchstart\":_vm.startSwipe,\"touchmove\":_vm.continueSwipe,\"touchend\":_vm.endSwipe}},[_c('div',{staticClass:\"cool-lightbox__progressbar\",style:(_vm.stylesInterval)}),_vm._v(\" \"),_c('div',{staticClass:\"cool-lightbox__navigation\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:((_vm.hasPreviousButton || _vm.loopData) && _vm.items.length > 1),expression:\"(hasPreviousButton || loopData) && items.length > 1\"}],staticClass:\"cool-lightbox-button cool-lightbox-button--prev\",class:_vm.buttonsClasses,attrs:{\"type\":\"button\",\"title\":\"Previous\"},on:{\"click\":_vm.onPrevClick}},[_vm._t(\"icon-previous\",[_c('div',{staticClass:\"cool-lightbox-button__icon\"},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z\"}})])])])],2),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:((_vm.hasNextButton || _vm.loopData) && _vm.items.length > 1),expression:\"(hasNextButton || loopData) && items.length > 1\"}],staticClass:\"cool-lightbox-button cool-lightbox-button--next\",class:_vm.buttonsClasses,attrs:{\"type\":\"button\",\"title\":\"Next\"},on:{\"click\":function($event){return _vm.onNextClick(false)}}},[_vm._t(\"icon-next\",[_c('div',{staticClass:\"cool-lightbox-button__icon\"},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z\"}})])])])],2)]),_vm._v(\" \"),(_vm.effect === 'swipe')?_c('div',{staticClass:\"cool-lightbox__wrapper cool-lightbox__wrapper--swipe\",style:({\n          transform: 'translate3d('+_vm.xSwipeWrapper+'px, '+_vm.ySwipeWrapper+'px, 0)',\n          transition: _vm.swipeAnimation\n        })},_vm._l((_vm.items),function(item,itemIndex){return _c('div',{key:itemIndex,ref:\"items\",refInFor:true,staticClass:\"cool-lightbox__slide\",class:{ 'cool-lightbox__slide--current': itemIndex === _vm.imgIndex }},[(_vm.getMediaType(itemIndex) === 'image')?_c('div',{directives:[{name:\"lazyload\",rawName:\"v-lazyload\"}],key:\"image\",staticClass:\"cool-lightbox__slide__img\",style:(_vm.imgWrapperStyle)},[(!_vm.isItemPicture(itemIndex))?_c('img',{key:itemIndex,attrs:{\"data-src\":_vm.getItemSrc(itemIndex),\"data-srcset\":_vm.getItemSrcSet(itemIndex),\"data-sizes\":_vm.getItemSizes(itemIndex),\"draggable\":\"false\",\"alt\":_vm.getItemAlt(itemIndex)},on:{\"load\":_vm.imageLoaded,\"click\":function($event){return _vm.zoomImage(itemIndex)},\"mousedown\":function($event){return _vm.handleMouseDown($event)},\"mouseup\":function($event){return _vm.handleMouseUp($event)},\"mousemove\":function($event){return _vm.handleMouseMove($event)},\"touchstart\":function($event){return _vm.handleMouseDown($event)},\"touchmove\":function($event){return _vm.handleMouseMove($event)},\"touchend\":function($event){return _vm.handleMouseUp($event)}}}):_c('picture',{key:itemIndex},[_vm._l((_vm.getPictureSources(itemIndex)),function(source,sourceIndex){return _c('source',{key:(\"source-\" + _vm.imgIndex + \"-\" + sourceIndex),attrs:{\"data-srcset\":source.srcset,\"data-media\":source.media,\"type\":source.type,\"data-sizes\":source.sizes || _vm.getItemSizes(_vm.imgIndex)}})}),_vm._v(\" \"),_c('img',{attrs:{\"data-src\":_vm.getItemSrc(itemIndex),\"data-srcset\":_vm.getItemSrcSet(itemIndex),\"data-sizes\":_vm.getItemSizes(itemIndex),\"draggable\":\"false\",\"alt\":_vm.getItemAlt(itemIndex)},on:{\"load\":_vm.imageLoaded,\"click\":function($event){return _vm.zoomImage(itemIndex)},\"mousedown\":function($event){return _vm.handleMouseDown($event)},\"mouseup\":function($event){return _vm.handleMouseUp($event)},\"mousemove\":function($event){return _vm.handleMouseMove($event)},\"touchstart\":function($event){return _vm.handleMouseDown($event)},\"touchmove\":function($event){return _vm.handleMouseMove($event)},\"touchend\":function($event){return _vm.handleMouseUp($event)}}})],2),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.imageLoading),expression:\"imageLoading\"}],staticClass:\"cool-lightbox-loading-wrapper\"},[_vm._t(\"loading\",[_c('div',{staticClass:\"cool-lightbox-loading\"})])],2)]):_c('div',{key:\"video\",staticClass:\"cool-lightbox__iframe\"},[((!_vm.checkIsMp4(_vm.getItemSrc(itemIndex)) && _vm.getMediaType(itemIndex) === 'video'))?_c('iframe',{directives:[{name:\"autoplayObserver\",rawName:\"v-autoplayObserver\"}],key:itemIndex,staticClass:\"cool-lightbox-video\",style:(_vm.aspectRatioVideo),attrs:{\"data-autoplay\":_vm.setAutoplay(itemIndex),\"src\":_vm.getVideoUrl(_vm.getItemSrc(itemIndex)),\"frameborder\":\"0\",\"allow\":\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\"allowfullscreen\":\"\"}}):_vm._e(),_vm._v(\" \"),((_vm.getMediaType(itemIndex) === 'iframe') || (_vm.getPDFurl(_vm.getItemSrc(itemIndex))))?_c('iframe',{key:itemIndex,staticClass:\"cool-lightbox-pdf\",attrs:{\"src\":_vm.getItemSrc(itemIndex),\"frameborder\":\"0\",\"allowfullscreen\":\"\"}}):_vm._e(),_vm._v(\" \"),(_vm.checkIsMp4(_vm.getItemSrc(itemIndex)) || _vm.getMediaType(itemIndex) === 'webVideo')?_c('video',{directives:[{name:\"autoplayObserver\",rawName:\"v-autoplayObserver\"}],key:_vm.checkIsMp4(_vm.getItemSrc(itemIndex)),staticClass:\"cool-lightbox-video\",style:(_vm.aspectRatioVideo),attrs:{\"data-autoplay\":_vm.setAutoplay(itemIndex),\"controls\":\"\",\"controlslist\":\"nodownload\",\"l\":\"\",\"poster\":\"\"}},[_c('source',{attrs:{\"src\":_vm.checkIsMp4(_vm.getItemSrc(itemIndex)),\"type\":'video/'+(_vm.getVideoExt(_vm.getItemSrc(itemIndex)) ? _vm.getVideoExt(_vm.getItemSrc(itemIndex)) : _vm.getExtFromItem(itemIndex))}}),_vm._v(\"\\n              Sorry, your browser doesn't support embedded videos\\n            \")]):_vm._e()])])}),0):_vm._e(),_vm._v(\" \"),(_vm.effect === 'fade')?_c('div',{staticClass:\"cool-lightbox__wrapper\"},[_c('div',{ref:\"items\",staticClass:\"cool-lightbox__slide cool-lightbox__slide--current\"},[_c('transition',{attrs:{\"name\":\"cool-lightbox-slide-change\",\"mode\":\"out-in\"}},[(_vm.getMediaType(_vm.imgIndex) === 'image')?_c('div',{key:\"image\",staticClass:\"cool-lightbox__slide__img\",style:(_vm.imgWrapperStyle)},[(!_vm.isItemPicture(_vm.imgIndex))?_c('transition',{attrs:{\"name\":\"cool-lightbox-slide-change\",\"mode\":\"out-in\"}},[_c('img',{key:_vm.imgIndex,attrs:{\"src\":_vm.getItemSrc(_vm.imgIndex),\"srcset\":_vm.getItemSrcSet(_vm.imgIndex),\"sizes\":_vm.getItemSizes(_vm.imgIndex),\"draggable\":\"false\",\"alt\":_vm.getItemAlt(_vm.imgIndex)},on:{\"load\":_vm.imageLoaded,\"click\":_vm.zoomImage,\"mousedown\":function($event){return _vm.handleMouseDown($event)},\"mouseup\":function($event){return _vm.handleMouseUp($event)},\"mousemove\":function($event){return _vm.handleMouseMove($event)}}})]):_c('transition',{attrs:{\"name\":\"cool-lightbox-slide-change\",\"mode\":\"out-in\"}},[_c('picture',{key:_vm.imgIndex},[_vm._l((_vm.getPictureSources(_vm.imgIndex)),function(source,sourceIndex){return _c('source',{key:(\"source-\" + _vm.imgIndex + \"-\" + sourceIndex),attrs:{\"srcset\":source.srcset,\"type\":source.type,\"media\":source.media,\"sizes\":source.sizes || _vm.getItemSizes(_vm.imgIndex)}})}),_vm._v(\" \"),_c('img',{attrs:{\"src\":_vm.getItemSrc(_vm.imgIndex),\"srcset\":_vm.getItemSrcSet(_vm.imgIndex),\"sizes\":_vm.getItemSizes(_vm.imgIndex),\"draggable\":\"false\",\"alt\":_vm.getItemAlt(_vm.imgIndex)},on:{\"load\":_vm.imageLoaded,\"click\":function($event){return _vm.zoomImage(_vm.imgIndex)},\"mousedown\":function($event){return _vm.handleMouseDown($event)},\"mouseup\":function($event){return _vm.handleMouseUp($event)},\"mousemove\":function($event){return _vm.handleMouseMove($event)}}})],2)]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.imageLoading),expression:\"imageLoading\"}],staticClass:\"cool-lightbox-loading-wrapper\"},[_vm._t(\"loading\",[_c('div',{staticClass:\"cool-lightbox-loading\"})])],2)],1):_c('div',{key:\"video\",staticClass:\"cool-lightbox__iframe\"},[_c('transition',{attrs:{\"name\":\"cool-lightbox-slide-change\",\"mode\":\"out-in\"}},[((!_vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)) && _vm.getMediaType(_vm.imgIndex) === 'video'))?_c('iframe',{directives:[{name:\"autoplayObserver\",rawName:\"v-autoplayObserver\"}],key:_vm.getVideoUrl(_vm.getItemSrc(_vm.imgIndex)),staticClass:\"cool-lightbox-video\",style:(_vm.aspectRatioVideo),attrs:{\"data-autoplay\":_vm.setAutoplay(_vm.imgIndex),\"src\":_vm.getVideoUrl(_vm.getItemSrc(_vm.imgIndex)),\"frameborder\":\"0\",\"allow\":\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\"allowfullscreen\":\"\"}}):_vm._e(),_vm._v(\" \"),((_vm.getMediaType(_vm.imgIndex) === 'iframe') || (_vm.getPDFurl(_vm.getItemSrc(_vm.imgIndex))))?_c('iframe',{key:_vm.imgIndex,staticClass:\"cool-lightbox-pdf\",attrs:{\"src\":_vm.getItemSrc(_vm.imgIndex),\"frameborder\":\"0\",\"allowfullscreen\":\"\"}}):_vm._e(),_vm._v(\" \"),(_vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)) || _vm.getMediaType(_vm.imgIndex) === 'webVideo')?_c('video',{directives:[{name:\"autoplayObserver\",rawName:\"v-autoplayObserver\"}],key:_vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)),staticClass:\"cool-lightbox-video\",style:(_vm.aspectRatioVideo),attrs:{\"data-autoplay\":_vm.setAutoplay(_vm.imgIndex),\"controls\":\"\",\"controlslist\":\"nodownload\",\"poster\":\"\"}},[_c('source',{attrs:{\"src\":_vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)),\"type\":'video/'+(_vm.getVideoExt(_vm.getItemSrc(_vm.imgIndex)) ? _vm.getVideoExt(_vm.getItemSrc(_vm.imgIndex)) : _vm.getExtFromItem(_vm.imgIndex))}}),_vm._v(\"\\n                  Sorry, your browser doesn't support embedded videos\\n                \")]):_vm._e()])],1)])],1)]):_vm._e(),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"cool-lightbox-modal\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.checkIfIsObject(_vm.imgIndex) && (_vm.items[_vm.imgIndex].title || _vm.items[_vm.imgIndex].description)),expression:\"checkIfIsObject(imgIndex) && (items[imgIndex].title || items[imgIndex].description)\"}],key:\"caption-block\",staticClass:\"cool-lightbox-caption\"},[_c('transition',{attrs:{\"name\":\"cool-lightbox-slide-change\",\"mode\":\"out-in\"}},[(_vm.checkIfIsObject(_vm.imgIndex) && _vm.items[_vm.imgIndex].title)?_c('h6',{key:\"title\",domProps:{\"innerHTML\":_vm._s(_vm.items[_vm.imgIndex].title)}}):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"cool-lightbox-slide-change\",\"mode\":\"out-in\"}},[(_vm.checkIfIsObject(_vm.imgIndex) && _vm.items[_vm.imgIndex].description)?_c('p',{key:\"description\",domProps:{\"innerHTML\":_vm._s(_vm.items[_vm.imgIndex].description)}}):_vm._e()])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"cool-lightbox-toolbar\",class:_vm.buttonsClasses},[(this.slideshow && _vm.items.length > 1)?_c('button',{staticClass:\"cool-lightbox-toolbar__btn\",attrs:{\"type\":\"button\",\"title\":\"Play slideshow\"},on:{\"click\":_vm.togglePlaySlideshow}},[(!_vm.isPlayingSlideShow)?_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M6.5 5.4v13.2l11-6.6z\"}})]):_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('g',[_c('rect',{attrs:{\"id\":\"svg_4\",\"height\":\"11.97529\",\"width\":\"11.728392\",\"y\":\"6.030873\",\"x\":\"6.259265\",\"stroke-width\":\"1.5\",\"stroke\":\"#000\",\"fill\":\"#000000\"}})])])]):_vm._e(),_vm._v(\" \"),(_vm.items.length > 1 && _vm.gallery)?_c('button',{staticClass:\"cool-lightbox-toolbar__btn\",attrs:{\"type\":\"button\",\"title\":\"Show thumbnails\"},on:{\"click\":function($event){_vm.showThumbs = !_vm.showThumbs;}}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 \\n            0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 \\n            0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 \\n            0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z\"}})])]):_vm._e(),_vm._v(\" \"),(_vm.fullScreen)?_c('button',{staticClass:\"cool-lightbox-toolbar__btn\",attrs:{\"type\":\"button\",\"title\":\"Fullscreen\"},on:{\"click\":_vm.toggleFullScreenMode}},[_c('svg',{attrs:{\"width\":\"20px\",\"height\":\"20px\",\"viewBox\":\"0 0 18 18\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('path',{attrs:{\"d\":\"M4.5 11H3v4h4v-1.5H4.5V11zM3 7h1.5V4.5H7V3H3v4zm10.5 6.5H11V15h4v-4h-1.5v2.5zM11 3v1.5h2.5V7H15V3h-4z\"}})])]):_vm._e(),_vm._v(\" \"),(_vm.showCloseButton)?_c('button',{staticClass:\"cool-lightbox-toolbar__btn\",attrs:{\"type\":\"button\",\"title\":\"Close\"},on:{\"click\":_vm.close}},[_vm._t(\"close\",[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z\"}})])])],2):_vm._e()])],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"cool-lightbox-modal\"}},[(_vm.isZooming && _vm.useZoomBar)?_c('div',{staticClass:\"cool-lightbox-zoom\"},[_c('svg',{staticClass:\"cool-lightbox-zoom__icon\",attrs:{\"height\":\"469pt\",\"viewBox\":\"0 -192 469.33333 469\",\"width\":\"469pt\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('path',{attrs:{\"d\":\"m437.332031.167969h-405.332031c-17.664062 \\n          0-32 14.335937-32 32v21.332031c0 17.664062 14.335938 32 32 32h405.332031c17.664063 0 32-14.335938 \\n          32-32v-21.332031c0-17.664063-14.335937-32-32-32zm0 0\"}})]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.zoomBar),expression:\"zoomBar\"}],attrs:{\"type\":\"range\",\"name\":\"points\",\"min\":\"0\",\"max\":\"50\"},domProps:{\"value\":(_vm.zoomBar)},on:{\"__r\":function($event){_vm.zoomBar=$event.target.value;}}}),_vm._v(\" \"),_c('svg',{staticClass:\"cool-lightbox-zoom__icon\",attrs:{\"height\":\"426.66667pt\",\"viewBox\":\"0 0 426.66667 426.66667\",\"width\":\"426.66667pt\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('path',{attrs:{\"d\":\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 \\n          9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 \\n          11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 \\n          21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 \\n          21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"}})])]):_vm._e()])],1):_vm._e()])};\nvar __vue_staticRenderFns__ = [];\n\n  /* style */\n  var __vue_inject_styles__ = undefined;\n  /* scoped */\n  var __vue_scope_id__ = undefined;\n  /* module identifier */\n  var __vue_module_identifier__ = undefined;\n  /* functional template */\n  var __vue_is_functional_template__ = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n\n  \n  var CoolLightBox = normalizeComponent_1(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    undefined,\n    undefined\n  );\n\nfunction install(Vue) {\r\n  if (install.installed) { return; }\r\n  install.installed = true;\r\n  Vue.component(\"CoolLightBox\", CoolLightBox);\r\n}\r\n\r\nvar plugin = {\r\n  install: install\r\n};\r\n\r\nvar GlobalVue = null;\r\nif (typeof window !== \"undefined\") {\r\n  GlobalVue = window.Vue;\r\n} else if (typeof global !== \"undefined\") {\r\n  GlobalVue = global.vue;\r\n}\r\n\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin);\r\n}\r\n\r\nCoolLightBox.install = install;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoolLightBox);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.esm.js\n");

/***/ }),

/***/ "./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css":
/*!***********************************************************************!*\
  !*** ./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../css-loader??ref--6-1!../../postcss-loader/src??ref--6-2!./vue-cool-lightbox.min.css */ \"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWNvb2wtbGlnaHRib3gvZGlzdC92dWUtY29vbC1saWdodGJveC5taW4uY3NzP2E4N2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxtUEFBK0c7O0FBRXJJLDRDQUE0QyxRQUFTOztBQUVyRDtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyx5RkFBc0M7O0FBRTNEOztBQUVBLEdBQUcsS0FBVSxFQUFFIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Z1ZS1jb29sLWxpZ2h0Ym94L2Rpc3QvdnVlLWNvb2wtbGlnaHRib3gubWluLmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi0yIS4vdnVlLWNvb2wtbGlnaHRib3gubWluLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi0yIS4vdnVlLWNvb2wtbGlnaHRib3gubWluLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LTIhLi92dWUtY29vbC1saWdodGJveC5taW4uY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css\n");

/***/ })

}]);